{% extends '@bolt/_partials/fields/_base.html.twig' %}

{% block field %}

  {% set parsed_value = value | geolocation_decode_json %}

  <div class="geolocation-field-wrapper">

    {% set id_radio_search = id ~ '_radio_search' %}
    {% set id_radio_latlong = id ~ '_radio_latlong' %}
    {% set id_radio_name = id ~ '_radio_name' %}

    <div class="custom-control custom-radio custom-control-inline geolocation-radio-search">
      <input type="radio" id="{{ id_radio_search }}" name="{{ id_radio_name }}"
             value="search" class="custom-control-input"
        {% if parsed_value.selected == "search" %} checked {% endif %}
      >
      <label class="custom-control-label" for="{{ id_radio_search }}">Search</label>
    </div>
    <div class="custom-control custom-radio custom-control-inline geolocation-radio-latlong">
      <input type="radio" id="{{ id_radio_latlong }}" name="{{ id_radio_name }}"
             value="latlong" class="custom-control-input"
        {% if parsed_value.selected == "latlong" %} checked {% endif %}
      >
      <label class="custom-control-label" for="{{ id_radio_latlong }}">Latitude & Longitude</label>
    </div>

    {% set id_input_search = id ~ '_input_search' %}
    {% set id_input_lat = id ~ '_input_lat' %}
    {% set id_input_long = id ~ '_input_long' %}

    <div class="form-row">
      <div class="col form-group geolocation-field-search{% if parsed_value.selected == "latlong" or parsed_value.selected is null %} d-none {% endif %}">
        <label for="{{ id_input_search }}">Search</label>
        <input type="text" class="form-control" id="{{ id_input_search }}"
               placeholder="Search" value="{{ parsed_value.search|default() }}"
        >
      </div>
      <div class="col form-group geolocation-field-lat{% if parsed_value.selected == "search" or parsed_value.selected is null %} d-none {% endif %}">
        <label for="{{ id_input_lat }}">Latitude</label>
        <input type="text" class="form-control" id="{{ id_input_lat }}"
               placeholder="Latitude" value="{{ parsed_value.lat|default() }}"
        >
      </div>
      <div class="col form-group geolocation-field-long{% if parsed_value.selected == "search" or parsed_value.selected is null %} d-none {% endif %}">
        <label for="{{ id_input_long }}">Longitude</label>
        <input type="text" class="form-control" id="{{ id_input_long }}"
               placeholder="Longitude" value="{{ parsed_value.long|default() }}"
        >
      </div>
    </div>

    {% set update_gmap_btn_class = '' %}
    {% if parsed_value.selected == "search" or parsed_value.selected is null %}
      {% set update_gmap_btn_class = 'd-none' %}
    {% endif %}

    {% set zoom_btn_class = '' %}
    {% if parsed_value.selected is null %}
      {% set zoom_btn_class = 'd-none' %}
    {% endif %}

    <button type="button" class="btn btn-primary js-update-gmap {{ update_gmap_btn_class }}">Update Google Map</button>
    <button type="button" class="btn btn-secondary js-zoom-gmap-in {{ zoom_btn_class }}">Zoom in</button>
    <button type="button" class="btn btn-secondary js-zoom-gmap-out {{ zoom_btn_class }}">Zoom out</button>

    {% set restrictions = field.definition.has('autocompleteOptions') ? field.definition.get('autocompleteOptions') : [] %}
    <input type="hidden" data-autocomplete-options="{{ restrictions|json_encode }}" class="js-geolocation-val" name="{{ name }}" value="{{ value }}"/>

    {# If values are already saved, build the Google Map Query #}
    {% if parsed_value.selected == "search" %}
      {% set gmap_query = parsed_value.search|url_encode %}
    {% elseif parsed_value.selected == "latlong" and parsed_value.lat|default() and parsed_value.long|default() %}
      {% set gmap_query = parsed_value.lat ~ ',' ~ parsed_value.long|url_encode %}
    {% endif %}

    {% if(parsed_value.zoom is not defined) %}
      {% set zoom = 13 %}
    {% else %}
      {% set zoom = parsed_value.zoom %}
    {% endif %}

    {% if zoom is null %}
      {% set zoom = 13 %}
    {% endif %}

    <input type="hidden" class="js-geolocation-zoom" value="{{ zoom }}"/>

    <div class="geolocation-field-wrapper__gmap-wrapper{% if gmap_query is not defined %} d-none {% endif %}">
      <div class="geolocation-field-wrapper__gmap"
           data-selected="{{ parsed_value.selected }}"
           data-search="{{ parsed_value.search|default() }}"
           data-lat="{{ parsed_value.lat|default() }}"
           data-long="{{ parsed_value.long|default() }}"
           data-zoom="{{ zoom }}"
      ></div>
    </div>

    {#    {{ dump(geolocation_settings()) }}#}
  </div>
{% endblock %}
